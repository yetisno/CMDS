group 'org.yetiz.serv.cmds'
version '1.0'

apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':cmds-utils')
    compile project(':service-entry')
    compile project('register')
    compile project('location-manager')
    compile project('region-cooperator')
    compile project('inter-region-cooperator')
    compile project('token-issuer')
    compile project('name-examiner')
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:5.2.1'
    }
}

def manifestMainClass = 'Launcher'
def manifestImplementationVersion = "${version}"
def manifestBuiltDate = System.currentTimeMillis()
def manifestClassPath = configurations.compile.collect { "libs${File.separator}${it.getName()}" }.join(' ')

task export_library(type: Copy) {
    into "$buildDir${File.separator}output${File.separator}libs"
    from configurations.runtime
}

task copy_logger_config(type: Copy) {
    into "$buildDir${File.separator}output${File.separator}"
    from "$projectDir${File.separator}logger.yaml"
}

jar {
    dependsOn export_library
    dependsOn copy_logger_config
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    destinationDir file("$buildDir${File.separator}output/")
    from sourceSets.main.allSource
}

task manifastJar(type: Jar, dependsOn: sourcesJar) {
    archiveName = "$baseName-$version.$extension"
    destinationDir file("$buildDir${File.separator}output/")
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    manifest {
        attributes 'Main-Class': manifestMainClass,
                'Implementation-Version': manifestImplementationVersion,
                'Built-Date': manifestBuiltDate,
                "Class-Path": manifestClassPath
    }
}

artifacts {
    archives manifastJar
}